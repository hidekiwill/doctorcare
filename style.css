* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /*a caixa é contada a partir da borda */
}

/*========= Raiz do documento =========*/
:root {
  font-size: 62.5%; /*Por padrão os navegadores usam 16px, convertemos aqui para facilitar a base, em vez de 16px torna-se 10px*/
  --hue: 170;
  --primary-color: hsl(var(--hue), 100%, 26%);
  --headline: hsl(210, 11%, 15%);
  --gray-paragraph: hsl(210, 9%, 31%);
  --brand-beige: hsl(39, 100%, 97%);
  --brand-light: hsl(calc(var(--hue) - 22), 23%, 89%);
  --brand-light-2: hsl(calc(--hue + 10), 14%, 97%);
  --brand-dark: hsl(var(--hue), 100%, 14%);
  --bg-light: hsl(180, 14%, 97%);
  --nav-height: 7.2rem;
}

html {
  scroll-behavior: smooth; /*habilita o scroll suave*/
}

html,
body {
  width: 100%;
  height: 100%;
}

body {
  font-family: 'DM Sans';
  font-size: 1.6rem; /*voltando o documento com o tamanho padrão de 16px mas com a unidade rem*/
  text-align: center;

  overflow: overlay; /*sobrepoe o tamanho ou largura do scroll*/

  background: var(--bg-light);
}

.wrapper {
  display: grid;
  /*essas são as medidas dos conteudos da aplicação, como o nav (menu) o header etc.*/
  width: min(
    50rem,
    100%
  ); /*o dispositivo menor que 50rem vai pegar 100%, maior que 50rem vai fixar em 50rem*/
  margin: 0 auto;
  padding: 2.4rem; /*distanciamento da aplicação nos lados*/
}

ul {
  list-style: none;
}

img {
  max-width: 100%; /*vai sempre respeitar a caixa em que é inserido a imagem, que no caso é o tamanho do nosso wrapper*/
}

section {
  padding-block: 10rem;
}

section header h4 {
  font-size: 1.4rem;
  font-weight: 700;
  line-height: 150%;
  letter-spacing: 0.08rem;
  color: var(--primary-color);
  margin-top: calc(
    4.1rem + var(--nav-height)
  ); /*espaçamento mais a altura do nav, para manter o distanciamento*/
  margin-bottom: 1.6rem;
  text-transform: uppercase;
}

section header h2 {
  font-size: 3rem;
  line-height: 3.9rem;
  color: var(--headline);
}

section header h1 {
  font-size: 3.4rem;
  color: var(--headline);
  line-height: 130%;
  margin-bottom: 2.4rem;
}

section .content p {
  color: var(--gray-paragraph);
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 150%;
}

.button {
  border-radius: 4rem;
  border: none;
  padding: 1.6rem 3.2rem;
  width: fit-content; /*adaptado a largura*/
  background-color: var(--primary-color);
  margin-top: 3.2rem;
  color: hsl(0, 0%, 100%);
  text-transform: uppercase;
  text-decoration: none;
  font-size: 1.4rem;
  font-weight: 700;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1.6rem;
  transition: background 200ms;
}

.button:hover {
  background: var(--brand-dark);
}

.social-links {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 3.2rem;
}

/*custom colors*/
#services .card circle {
  fill: var(--brand-light);
}

#navigation .logo path[fill*="#00856F"], /*selecionando todos os path que contenha o valor do fill, sendo o fill a cor de preenchimento do desenho ou letra*/
#backToTopButton circle {
  fill: var(--primary-color);
}

button.open-menu path[stroke*='#00856F'],
#contact li path {
  stroke: var(--primary-color);
}

body.menu-expanded #navigation .logo path,
#navigation.scroll .logo path {
  fill: white;
}

#navigation.scroll button.open-menu path[stroke*='#00856F'] {
  stroke: white;
}

/*========= NAVIGATION (MENU) =========*/
nav {
  display: flex;

  height: var(--nav-height);

  position: fixed; /*elemento fixo na pagina*/
  top: 0;
  width: 100vw;

  z-index: 100;
}

nav .wrapper {
  /*nesse seletor é preciso dar um espaço na seleção da classe por ser o filho da primeira classe*/
  display: flex;
  align-items: center;
  justify-content: space-between;
}

nav.scroll {
  background: var(--primary-color);
}

nav.scroll button path {
  stroke: white; /*stroke pq é o atributo la no html que desenha as linhas do menuzinho, é só ver no html*/
}

nav button {
  background: none;
  border: none;
  cursor: pointer;
}

nav .menu,
nav .close-menu {
  position: fixed;
}

/*========= NAVIGATION (MENU-EXPANDED MOBILE) =========*/
body.menu-expanded {
  overflow: hidden; /*tira o scroll vertical e lateral por conta dos elementos abaixo ou aos lado*/
}

body.menu-expanded > :not(nav) {
  /*esta pegando tudo, menos o nav e aplicando o display none, desaparecendo tudo menos o nav, para efeito de acessibilidade na hora de navegar*/
  /*pega tudo do primeiro nivel o ">"*/
  visibility: hidden;
}

.menu,
.close-menu,
body.menu-expanded .open-menu {
  opacity: 0;
  visibility: hidden;
}

body.menu-expanded .menu,
body.menu-expanded .close-menu {
  opacity: 1;
  visibility: visible;
}

.menu {
  transform: translateY(
    100%
  ); /*menu, antes do expanded e joga pra fora da tela*/
}

body.menu-expanded .menu {
  top: 0;
  left: 0;
  background: var(--primary-color);

  width: 100vw;
  height: 100vh;

  padding-top: var(--nav-height);

  transition: transform 300ms; /*vai fazer a transformação em 300ms*/

  transform: translateY(
    0
  ); /*qdo ele estiver no expanded ele vai trazer de volta pro zero*/
}

.menu ul:nth-child(1) {
  display: flex;
  flex-direction: column;
  gap: 4.8rem;
  margin-top: 6rem;

  font-weight: 700;
  font-size: 2.4rem;
  line-height: 3.1rem;
}

.menu ul li a {
  color: white;
  text-decoration: none;
}

.menu .button {
  background: white;
  border-radius: 4rem;
  font-weight: 700;
  font-size: 1.8rem;
  line-height: 2.3rem;
  text-transform: uppercase;
  text-decoration: none;

  color: var(--primary-color);

  display: inline-block;
  padding: 1.6rem 3.2rem;

  margin-top: 4.8rem;
  margin-bottom: 8rem;
}

.menu .button:hover {
  background: var(--primary-color);
  color: white;
  filter: brightness(1.1);
}

body.menu-expanded .logo,
body.menu-expanded button {
  position: relative;
  z-index: 100;
}

body.menu-expanded .logo path {
  fill: white;
}

body.menu-expanded button path {
  stroke: white;
}

/*========= HOME =========*/

/*esse seletor é para fazer o fundo verde e definir medidas para ela*/
#home {
  padding-block: 0;
  padding-top: calc(4.1rem + var(--nav-height));
}

#home::before {
  /*before pq é criado antes do header*/
  /*pseudo class, ideia de criar um elemento html pelo css*/
  content: ''; /*lembramos que toda tag é uma caixa e nesse caso ela é vazio*/
  width: 100%; /*essa unidade de medida é a viewport, vai preencher tudo o que a janela apresenta no momento, independente do tamanho, no caso o fundo verde, o mesmo vale para o height*/
  height: calc(
    77% + var(--nav-height)
  ); /*esse calculo para mandar a parte verde do fundo centralizado na caixa branca dos status*/
  background: var(--brand-light);
  display: block; /*todo elemento precisa de um display, usamos o block para poder atribuir valores de width e height. o Inline já não aceita atribuir valores para altura e largura*/

  position: absolute; /*esse atributo coloca o elemento sobreposto ao que estava e libera as propriedades top, left*/
  top: 0; /*coloca o elemento na posição 0 do topo da janela*/
  left: 0; /*coloca o elemento na posição 0 do lado esquerdo da janela*/
  z-index: -1; /*coloca o elemento atras do contuedo principal*/
}

#home .button {
  margin-inline: auto;
}

#home p {
  font-size: 1.8rem;
  line-height: 150%;
  font-weight: 400;
  color: var(--gray-paragraph);
}

#home img {
  margin-top: 6rem;
  margin-bottom: 0;
  width: 26.4rem; /*definiu o tamanho da imagem para na hora de mudar de tamanho, na acessibilidade, a imagem ter um tamanho definido*/
  display: block;
  margin-inline: auto;
  object-position: 0 2rem; /*mexe com o posicionamento da imagem, esse atributo é suado apenas para imagens, onde o primeiro valor é o eixo x e o segundo valor o eixo y*/
}

#home .stats {
  width: 100%;
  padding-block: 4rem; /*padding block mexe com a altura, em cima e embaixo, o inline mexeria com a largura. Essas duas propriedades substituem o padding top e bottom, padding left e right respectivamente*/

  margin-inline: auto; /*substitui o margin left + margin right*/
  background-color: var(--brand-beige);
  display: flex;
  flex-direction: column; /*dar a direção do display flex*/
  justify-content: center; /*alinhando os elementos de acordo com o flex direction*/
  gap: 6rem;

  border-radius: 0.6rem;
  border: 0.1rem solid var(--brand-light);
}

#home .stat h3 {
  font-size: 4.8rem;
  color: var(--headline);
  line-height: 6.2rem;
  margin-bottom: 0.4rem;
}

#home .stat p {
  color: var(--primary-color);
  /*font-size: 1.6rem; o body já está em 1.6rem*/
  line-height: 2.4rem;
}

/*========= SERVICES =========*/

#services header h2 {
  margin-bottom: 6rem;
}

#services .cards {
  display: flex;
  flex-direction: column;
  gap: 3.2rem;
}

#services .card {
  padding: 2.4rem;
  text-align: left;
  border: 0.1rem solid var(--brand-light);
  border-radius: 0.6rem;
  background: white;
}

#services .card h3 {
  margin-block: 1.6rem;
}

/*========= ABOUT =========*/
#about {
  text-align: left;
  background: var(--brand-beige);
}

#about #about header h2 {
  margin-bottom: 2.4rem;
}

#about .content p {
  margin-top: 2.4rem;
  margin-bottom: 6rem;
}

/*========= CONTACT =========*/
#contact {
  text-align: left;
}

#contact header {
  margin-bottom: 3.2rem;
}

#contact ul {
  display: flex;
  flex-direction: column;
  gap: 1.6rem;
  margin-bottom: 3.2rem;
}

#contact ul li {
  display: flex;
  align-items: center;
  gap: 0.8rem;
}

#contact .button {
  margin-bottom: 6rem;
}

/*========= FOOTER =========*/
footer {
  background: var(--primary-color);
  padding-block: 6rem;
  text-align: left;
  color: white;
}

footer .logo {
  /*o logo está numa tag "a" e essa tag não aceita valores para margin, width, height, então muda-se para display: inline-block*/
  display: inline-block;
  margin-bottom: 2.4rem;
}

footer .logo svg {
  width: 23.6rem;
  height: 3.1rem;
}

footer .logo path {
  fill: white;
}

footer p {
  color: var(--brand-beige);
  line-height: 2;
  margin-bottom: 3.2rem;
}

footer .social-links {
  justify-content: flex-start;
}

/*========= BACK TO TOP BUTTON =========*/

#backToTopButton {
  position: fixed; /*colocar o botão na primeira camada*/
  bottom: 1rem;
  right: 2.5rem;

  opacity: 0;
  visibility: hidden;

  transform: translateY(100%);
  transition: 200ms;
}

#backToTopButton.show {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

/*========= RESPONSIVO =========*/
/*O CSS vai aplicar essas configurações qdo abrir no desktop*/
@media (min-width: 102.4rem) {
  /*========= GERAL =========*/
  body {
    overflow: auto;
  }

  section {
    padding-block: 16rem;
  }

  section header h2 {
    font-size: 4rem;
    line-height: 5.2rem;
  }

  .col-a {
    grid-area: A;
  }

  .col-b {
    grid-area: B;
  }

  .wrapper {
    width: min(112rem, 100%);
    display: grid;
  }
  /*========= NAVIGATION =========*/

  /*reset*/
  nav#navigation .wrapper * {
    margin: 0;
    padding: 0;
    visibility: initial; /*pegar o valor inicial antes de aplicar o css*/
    display: initial;
    opacity: initial;
    flex-direction: initial;
    position: initial;
    font-size: initial;
    transform: initial;
    color: initial;
    background: initial;
    font-size: initial;
    font-weight: initial;
  }

  nav#navigation .close-menu,
  nav#navigation .open-menu,
  nav#navigation .social-links {
    display: none;
  }

  nav#navigation .menu {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 60%;
  }

  nav#navigation .menu ul:nth-child(1) {
    display: flex;
    gap: 3.2rem;
  }

  nav#navigation .menu ul li a {
    color: var(--primary-color);
    opacity: 0.7;
  }

  nav#navigation .menu a.button {
    display: flex;

    justify-content: center;
    align-items: center;
    padding: 1rem 2.4rem;

    border: 0.1rem solid var(--primary-color);
    border-radius: 4rem;

    color: var(--primary-color);
    font-weight: 700;
    font-size: 1.4rem;
    line-height: 1.8rem;
    text-transform: uppercase;
  }

  nav#navigation .menu a.button:hover {
    background: var(--primary-color);
    border: none;
    color: white;
  }

  nav#navigation.scroll .menu ul li a {
    color: var(--brand-light-2);
    opacity: 0.6;
  }

  nav#navigation.scroll .menu a.button {
    border-color: white;
    color: white;
  }

  nav#navigation .menu li a {
    transition: opacity 0.4s;
  }

  nav#navigation .menu li a.active,
  nav#navigation .menu li a:hover {
    opacity: 1;
    font-weight: 700;
  }

  nav#navigation .menu li a:after {
    content: '';
    width: 0%;
    height: 2px;
    background-color: var(--primary-color);
    position: relative;
    bottom: -2rem;
    left: -0.5rem;
    display: block;
    transition: width 0.2s;
  }

  nav#navigation.scroll .menu li a:after {
    background-color: white;
  }

  nav#navigation .menu li a.active::after,
  nav#navigation .menu li a:hover::after {
    padding-inline: 0.8rem;
    width: 100%;
  }

  nav#navigation.scroll .menu li a.active,
  nav#navigation.scroll .menu li a:hover {
    opacity: 1;
  }

  nav#navigation.scroll .menu a.button.active,
  nav#navigation.scroll .menu a.button:hover {
    background-color: var(--primary-color);
    filter: brightness(1.3);
    border: none;
  }

  /*========= HOME =========*/
  #home::before {
    height: calc(
      94% - var(--nav-height)
    ); /*alinhando o fundo do home com a caixa de stats*/
  }

  #home {
    padding-top: var(--nav-height);
  }

  #home .wrapper {
    grid-template-columns: 60.5rem 1fr;
    grid-template-areas: /*essa propriedade define as areas do grid*/
      'A B'
      'C C';
  }

  /*definindo os elementos nas suas respectivas areas*/
  #home .col-a {
    text-align: left;
    align-self: center;
  }

  #home h1 {
    font-size: 5.2rem;
  }

  #home .content p {
    font-size: 1.8rem;
    margin-bottom: 6rem;
  }

  #home .stats {
    grid-area: C;

    flex-direction: row;
    padding: 6rem;
    gap: 0;
  }

  #home .stats .stat + .stat {
    /*o ultimo stat é selecionado que tenha um stat antes*/
    border-left: 1px solid var(--primary-color);
  }

  #home .stats .stat {
    flex: 1; /*por estar em flex. essa propriedade divide todos os filhos numa base igual, vai preencher todos igualmente*/
  }

  #home .button {
    margin: 0;
  }

  #home img {
    width: 42rem;
  }

  /*========= SERVICES =========*/

  #services h2 {
    width: 47rem;
    margin-inline: auto;
  }

  #services .cards {
    flex-direction: row;
    flex-wrap: wrap; /*encaixar os cards, respeitando o tamanho deles*/
    gap: 4rem;
  }

  #services .card {
    width: 30%;
    flex-grow: 1; /*vai fazer os cards crescer, preencha o espaço restante aumentando de tamanho*/
  }

  /*========= ABOUT =========*/

  #about .wrapper {
    grid-template-columns: 48rem 1fr;
    grid-template-areas: 'B A';
    gap: 6.7rem;
  }

  #about .col-a {
    align-self: center;
  }

  #about .col-a h4 {
    margin-top: 0;
  }

  #about .content p {
    margin-bottom: 0;
  }

  /*========= CONTACT =========*/

  #contact .wrapper {
    grid-template-columns: 1fr 57.5rem;
    grid-template-areas: 'A B';
  }

  #contact h2 {
    width: 40.4rem;
  }

  /*========= FOOTER =========*/

  footer {
    padding-block: 8rem;
  }

  footer .wrapper {
    grid-template-columns: 1fr 1fr;
    grid-template-areas: 'A B';
  }

  footer .col-a {
    align-self: center;
  }

  footer .col-b {
    align-self: center;
    justify-self: end;
  }

  footer p {
    margin-bottom: 0;
  }
}
